<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Slot Game</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    html, body {
      height: 100vh; 
      margin: 0;
      padding: 0;
      background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
      color: #eee;
      overflow: hidden; 
      font-size: 14px; 
    }

    body {
      display: flex;
      align-items: center;
      justify-content: center; 
    }

    .game-wrapper { 
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
        padding: 1vh 1vw; 
        box-sizing: border-box;
    }

    .game-container {
      background: rgba(255, 255, 255, 0.05);
      backdrop-filter: blur(10px);
      border-radius: 15px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      width: 100%;
      max-width: 420px; /* –ù–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–∏–ª –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏ */
      height: auto; 
      max-height: 98vh; 
      /* –£–º–µ–Ω—å—à–∞–µ–º padding –∏ –¥–µ–ª–∞–µ–º –µ–≥–æ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º */
      padding: clamp(0.5rem, 1.5vh, 0.8rem); 
      display: flex;
      flex-direction: column;
      align-items: center;
      /* –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ, –≤–º–µ—Å—Ç–æ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–Ω–∏—è */
      justify-content: center; 
      overflow-y: auto; 
      box-shadow: 0 0 20px rgba(0,0,0,0.3);
    }

    @media (min-width: 700px) and (min-height: 600px) {
        .game-container {
            max-width: 500px; 
            padding: clamp(0.8rem, 2vh, 1rem);
        }
    }
     @media (min-width: 900px) and (min-height: 700px) {
        .game-container {
            max-width: 550px;
        }
    }

    .game-header h2 {
      font-size: clamp(1.4rem, 3.5vw, 2rem); 
      margin-bottom: 0.3rem; /* –£–º–µ–Ω—å—à–µ–Ω –æ—Ç—Å—Ç—É–ø */
      text-align: center;
    }

    .balance, .win {
      font-size: clamp(0.9rem, 2.8vw, 1.3rem); 
      text-shadow: 0 0 8px rgba(255, 215, 0, 0.3);
      margin: 0.2rem 0; /* –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–º–µ–Ω—å—à–µ–Ω –æ—Ç—Å—Ç—É–ø */
      text-align: center;
    }
    .win {
        color: #00ff95;
        font-weight: bold;
        text-shadow: 0 0 10px rgba(0, 255, 149, 0.5);
    }

    .alert { 
        font-size: clamp(0.7rem, 2.2vw, 0.85rem);
        padding: 0.4rem;
        margin: 0.3rem 0; /* –£–º–µ–Ω—å—à–µ–Ω –æ—Ç—Å—Ç—É–ø */
    }

    .form-section {
        width: 100%;
        margin: 0.3rem 0; /* –£–º–µ–Ω—å—à–µ–Ω –æ—Ç—Å—Ç—É–ø */
    }

    .input-group {
        margin-bottom: 0.3rem; 
    }
    .input-group .form-control, .input-group .btn {
        font-size: clamp(0.75rem, 2.3vw, 0.9rem); 
        padding: 0.35rem 0.7rem; 
    }
    .input-group-text {
        font-size: clamp(0.75rem, 2.3vw, 0.9rem);
        padding: 0.35rem 0.5rem;
    }

    .btn-spin {
      background: linear-gradient(45deg, #ff4e50, #f9d423);
      border: none;
      font-size: clamp(1.1rem, 3.5vw, 1.6rem); 
      padding: 0.5rem 1.3rem; /* –£–º–µ–Ω—å—à–µ–Ω padding */
      text-transform: uppercase;
      letter-spacing: 1px;
      text-shadow: 0 1px 2px rgba(0,0,0,0.2);
      transition: all 0.3s ease;
      margin: 0.4rem 0; /* –£–º–µ–Ω—å—à–µ–Ω –æ—Ç—Å—Ç—É–ø */
    }
    .btn-spin:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(255, 78, 80, 0.3);
    }

    .slot-machine {
      background: rgba(0, 0, 0, 0.6);
      padding: 0.8rem; /* –£–º–µ–Ω—å—à–µ–Ω padding */
      border-radius: 10px;
      margin: 0.5rem 0; /* –£–º–µ–Ω—å—à–µ–Ω –æ—Ç—Å—Ç—É–ø */
      position: relative;
      overflow: hidden;
      width: 100%; 
      max-width: 360px; /* –£–º–µ–Ω—å—à–µ–Ω–∞ –º–∞–∫—Å. —à–∏—Ä–∏–Ω–∞ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –≤—ã—Å–æ—Ç—ã —Å–ª–æ—Ç–æ–≤ */
      align-self: center; 
    }

    .slot-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 8px; /* –£–º–µ–Ω—å—à–µ–Ω –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ */
      aspect-ratio: 1; 
      width: 100%; 
      margin: 0 auto;
    }

    .slot-cell {
      aspect-ratio: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      background: rgba(255, 255, 255, 0.05);
      border-radius: 8px;
      /* –£–º–µ–Ω—å—à–µ–Ω —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ —Å–∏–º–≤–æ–ª–æ–≤ */
      font-size: clamp(1.8rem, 8vw, 2.8rem); 
      position: relative;
      overflow: hidden;
      transition: transform 0.2s;
      box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3);
    }
     .slot-cell::before {
      content: '';
      position: absolute;
      top: 0; left: 0; right: 0; bottom: 0;
      background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.08), transparent);
      transform: translateY(-100%);
      transition: transform 0.3s;
    }
    .slot-cell:hover::before {
      transform: translateY(100%);
    }
    .slot-cell.highlight {
      animation: pulse 0.8s infinite;
      box-shadow: 0 0 12px rgba(255, 215, 0, 0.6);
    }

    @keyframes pulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.03); }
    }

    .slot-symbol { position: relative; z-index: 1; }
    .symbol-BANANA { color: #ffd700; }
    .symbol-APPLE { color: #ff6b6b; }
    .symbol-PLUM { color: #9775fa; }
    .symbol-BAR { color: #15aabf; }
    .symbol-STAR { color: #ffd43b; }
    .symbol-7 { color: #ff0000; }
    .symbol-WILD {
      color: #ff00ff;
      text-shadow: 0 0 8px #ff00ff;
      animation: rainbow 3s linear infinite;
    }
    @keyframes rainbow {
      0% { filter: hue-rotate(0deg); }
      100% { filter: hue-rotate(360deg); }
    }

    .error { color: #ff5555; font-size: clamp(0.75rem, 2.3vw, 0.85rem); margin: 0.2rem 0; }
    .valid { color: #00ff95; text-shadow: 0 0 8px rgba(0, 255, 149, 0.3); font-size: clamp(0.75rem, 2.3vw, 0.85rem); margin: 0.2rem 0; }

    .form-control {
      background-color: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255, 255, 255, 0.2);
      color: #eee;
    }
    .form-control:focus {
      background-color: rgba(255, 255, 255, 0.1);
      border-color: rgba(255, 255, 255, 0.3);
      color: #eee;
      box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.1);
    }

    .row > * {
        padding-left: 0.4rem; /* –£–º–µ–Ω—å—à–µ–Ω padding –∫–æ–ª–æ–Ω–æ–∫ */
        padding-right: 0.4rem;
    }
    .g-3 { 
        --bs-gutter-x: 0.6rem; /* –£–º–µ–Ω—å—à–µ–Ω –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π gutter */
        --bs-gutter-y: 0.3rem; 
    }
    
    .verify-form-section { /* –û—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å–µ–∫—Ü–∏–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ */
        width: 100%;
        margin-top: 0.5rem; /* –ù–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É, —É–±—Ä–∞–ª–∏ mt-auto */
        margin-bottom: 0.1rem; /* –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É */
    }


    /* –û—Å–æ–±—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤ */
    @media (max-height: 500px) { /* –≠—Ç–æ—Ç –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º, –Ω–∞—Å—Ç—Ä–æ–π—Ç—å –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ */
        .game-container {
            padding: 0.4rem;
            justify-content: flex-start; 
        }
        .game-header h2 {
            font-size: 1.1rem;
            margin-bottom: 0.1rem;
        }
        .balance, .win {
            font-size: 0.8rem;
            margin: 0.1rem 0;
        }
        .btn-spin {
            font-size: 0.9rem;
            padding: 0.4rem 0.8rem;
            margin: 0.2rem 0;
        }
        .slot-machine {
            padding: 0.4rem;
            margin: 0.2rem 0;
            max-width: 320px; /* –ï—â–µ –º–µ–Ω—å—à–µ –¥–ª—è –æ—á–µ–Ω—å –Ω–∏–∑–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤ */
        }
        .slot-cell {
             font-size: clamp(1.5rem, 7vw, 2.2rem);
        }
        .input-group .form-control, .input-group .btn, .input-group-text {
            font-size: 0.7rem;
            padding: 0.25rem 0.4rem;
        }
        .verify-form-section {
            margin-top: 0.3rem;
        }
    }
  </style>
</head>
<body>
  <div class="game-wrapper">
    <div class="game-container">
      <div class="game-header">
        <h2 class="text-center">üé∞ Slot Game</h2>
      </div>

      <div class="balance text-center">
        Balance: <b><%= @balance.round(2) %></b>
      </div>

      <% if @require_deposit %>
        <div class="alert alert-danger text-center">
          Balance is zero. Please deposit funds.
        </div>
      <% end %>

      <div class="form-section">
        <div class="row g-3">
          <div class="col-sm-6">
            <form action="/set_bet" method="post" class="mb-0">
              <div class="input-group">
                <span class="input-group-text">Bet</span>
                <input type="number" class="form-control" name="bet" min="0.01" step="0.01" value="<%= @bet %>" <%= @require_deposit ? 'disabled' : '' %>>
                <button class="btn btn-outline-light" type="submit" <%= @require_deposit ? 'disabled' : '' %>>Set</button>
              </div>
            </form>
          </div>
          <div class="col-sm-6">
            <form action="/deposit" method="post" class="mb-0">
              <div class="input-group">
                <span class="input-group-text">Add</span>
                <input type="number" class="form-control" name="amount" min="0.01" step="0.01" placeholder="Amount">
                <button class="btn btn-outline-light" type="submit">Deposit</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <form action="/spin" method="post" class="text-center">
        <button type="submit" class="btn btn-spin btn-lg" <%= @require_deposit ? 'disabled' : '' %>>
          Spin
        </button>
      </form>

      <% if @message %>
        <%= @message %> 
      <% end %>

      <% if @screen_rows %>
        <div class="slot-machine">
          <div class="slot-grid">
            <% @screen_rows.each_with_index do |row, r_idx| %>
              <% row.each_with_index do |symbol, c_idx| %>
                <%
                  is_winning = false
                  if session[:winning_cells] 
                    session[:winning_cells].each do |win_data|
                      win_row_idx = win_data[0] 
                      win_col_idx = win_data[1] 
                      if win_row_idx == r_idx && win_col_idx == c_idx
                        is_winning = true
                        break
                      end
                    end
                  end
                %>
                <div class="slot-cell <%= 'highlight' if is_winning %>">
                  <div class="slot-symbol symbol-<%= symbol.to_s.upcase %>"> 
                    <% case symbol.to_s.upcase 
                       when 'BANANA' %>
                      <i title="Banana">üçå</i>
                    <% when 'APPLE' %>
                      <i title="Apple">üçé</i>
                    <% when 'PLUM' %>
                      <i title="Plum">üçá</i>
                    <% when 'BAR' %>
                      <i title="Bar">üç∏</i>
                    <% when 'STAR' %>
                      <i title="Star">‚≠ê</i>
                    <% when '7' %>
                      <i title="Seven">7Ô∏è‚É£</i>
                    <% when 'WILD' %>
                      <i title="Wild">üÉè</i>
                    <% else %>
                      <%= symbol %>
                    <% end %>
                  </div>
                </div>
              <% end %>
            <% end %>
          </div>
        </div>
      <% end %>

      <% if @win && @win > 0 %>
        <div class="win text-center">
          üéâ Win: <%= @win.round(2) %>
        </div>
      <% end %>

      <% if defined?(player_data) && player_data.is_a?(Hash) && player_data[:history] && player_data[:history].any? %>
        <div class="verify-form-section">
            <form action="/verify" method="post" class="mb-0">
              <div class="input-group">
                <span class="input-group-text">Verify</span>
                <input type="number" class="form-control" name="spin_index" min="0"
                       max="<%= player_data[:history].size - 1 %>" value="0"
                       placeholder="Spin #">
                <button class="btn btn-outline-light" type="submit">
                  Go
                </button>
              </div>
            </form>
        </div>
      <% end %>

    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
