<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Slot Game</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    html, body {
      height: 100vh; 
      margin: 0;
      padding: 0;
      background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
      color: #eee;
      overflow: auto; /* Changed from hidden to auto */
      font-size: 14px; 
    }

    body {
      display: flex;
      align-items: flex-start; /* Changed from center to flex-start */
      justify-content: center; 
    }

    .game-wrapper { 
        display: flex;
        justify-content: center;
        align-items: flex-start; /* Changed from center to flex-start */
        width: 100%;
        height: 100%;
        padding: 1vh 1vw; 
        box-sizing: border-box;
        overflow-y: auto; /* Added to make game-wrapper scrollable */
    }

    .game-container {
      background: rgba(255, 255, 255, 0.05);
      backdrop-filter: blur(10px);
      border-radius: 15px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      width: 100%;
      max-width: 420px; 
      height: auto; 
      /* max-height: 98vh; Removed */
      padding: clamp(0.5rem, 1.5vh, 0.8rem); 
      display: flex;
      flex-direction: column;
      align-items: center; 
      justify-content: flex-start; /* Changed from center to flex-start */
      overflow-y: visible; /* Changed from auto to visible */
      box-shadow: 0 0 20px rgba(0,0,0,0.3);
      /* box-sizing: border-box; Already present, keep it */
    }

    @media (min-width: 700px) and (min-height: 600px) {
        .game-container {
            max-width: 500px; 
            padding: clamp(0.8rem, 2vh, 1rem);
        }
    }
     @media (min-width: 900px) and (min-height: 700px) {
        .game-container {
            max-width: 550px;
        }
    }

    .game-header h2 {
      font-size: clamp(1.4rem, 3.5vw, 2rem); 
      margin-bottom: 0.3rem; /* Уменьшен отступ */
      text-align: center;
    }

    .balance, .win {
      font-size: clamp(0.9rem, 2.8vw, 1.3rem); 
      text-shadow: 0 0 8px rgba(255, 215, 0, 0.3);
      margin: 0.2rem 0; /* Значительно уменьшен отступ */
      text-align: center;
    }
    .win {
        color: #00ff95;
        font-weight: bold;
        text-shadow: 0 0 10px rgba(0, 255, 149, 0.5);
    }

    .alert { 
        font-size: clamp(0.7rem, 2.2vw, 0.85rem);
        padding: 0.4rem;
        margin: 0.3rem 0; /* Уменьшен отступ */
    }

    .form-section {
        width: 100%;
        margin: 0.3rem 0; /* Уменьшен отступ */
    }

    .input-group {
        margin-bottom: 0.3rem; 
    }
    .input-group .form-control, .input-group .btn {
        font-size: clamp(0.75rem, 2.3vw, 0.9rem); 
        padding: 0.35rem 0.7rem; 
    }
    .input-group-text {
        font-size: clamp(0.75rem, 2.3vw, 0.9rem);
        padding: 0.35rem 0.5rem;
    }

    .btn-spin {
      background: linear-gradient(45deg, #ff4e50, #f9d423);
      border: none;
      font-size: clamp(1.1rem, 3.5vw, 1.6rem); 
      padding: 0.5rem 1.3rem; /* Уменьшен padding */
      text-transform: uppercase;
      letter-spacing: 1px;
      text-shadow: 0 1px 2px rgba(0,0,0,0.2);
      transition: all 0.3s ease;
      margin: 0.4rem 0; /* Уменьшен отступ */
    }
    .btn-spin:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(255, 78, 80, 0.3);
    }

    .slot-machine {
      background: rgba(0, 0, 0, 0.6);
      padding: 0.5rem; /* Was 0.8rem */
      border-radius: 10px;
      margin: 0.3rem 0; /* Was 0.5rem 0 */
      position: relative;
      overflow: hidden;
      width: 100%; 
      max-width: 320px; /* Was 360px */
      align-self: center; 
    }

    .slot-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 5px; /* Was 8px */
      aspect-ratio: 1; 
      width: 100%; 
      margin: 0 auto;
    }

    .slot-cell {
      aspect-ratio: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      background: rgba(255, 255, 255, 0.05);
      border-radius: 8px;
      /* Уменьшен размер шрифта символов */
      font-size: clamp(1.8rem, 8vw, 2.8rem); 
      position: relative;
      overflow: hidden;
      transition: transform 0.2s;
      box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3);
    }
     .slot-cell::before {
      content: '';
      position: absolute;
      top: 0; left: 0; right: 0; bottom: 0;
      background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.08), transparent);
      transform: translateY(-100%);
      transition: transform 0.3s;
    }
    .slot-cell:hover::before {
      transform: translateY(100%);
    }
    .slot-cell.highlight {
      animation: pulse 0.8s infinite;
      box-shadow: 0 0 12px rgba(255, 215, 0, 0.6);
    }

    @keyframes pulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.03); }
    }

    .slot-symbol { position: relative; z-index: 1; }
    .symbol-BANANA { color: #ffd700; }
    .symbol-APPLE { color: #ff6b6b; }
    .symbol-PLUM { color: #9775fa; }
    .symbol-BAR { color: #15aabf; }
    .symbol-STAR { color: #ffd43b; }
    .symbol-7 { color: #ff0000; }
    .symbol-WILD {
      color: #ff00ff;
      text-shadow: 0 0 8px #ff00ff;
      animation: rainbow 3s linear infinite;
    }
    @keyframes rainbow {
      0% { filter: hue-rotate(0deg); }
      100% { filter: hue-rotate(360deg); }
    }

    .error { color: #ff5555; font-size: clamp(0.75rem, 2.3vw, 0.85rem); margin: 0.2rem 0; }
    .valid { color: #00ff95; text-shadow: 0 0 8px rgba(0, 255, 149, 0.3); font-size: clamp(0.75rem, 2.3vw, 0.85rem); margin: 0.2rem 0; }

    .form-control {
      background-color: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255, 255, 255, 0.2);
      color: #eee;
    }
    .form-control:focus {
      background-color: rgba(255, 255, 255, 0.1);
      border-color: rgba(255, 255, 255, 0.3);
      color: #eee;
      box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.1);
    }

    .row > * {
        padding-left: 0.4rem; /* Уменьшен padding колонок */
        padding-right: 0.4rem;
    }
    .g-3 { 
        --bs-gutter-x: 0.6rem; /* Уменьшен горизонтальный gutter */
        --bs-gutter-y: 0.3rem; 
    }
    
    .verify-form-section { /* Отдельный класс для секции верификации */
        width: 100%;
        margin-top: 0.5rem; /* Небольшой отступ сверху, убрали mt-auto */
        margin-bottom: 0.1rem; /* Минимальный отступ снизу */
    }


    /* Особые настройки для очень маленьких экранов */
    @media (max-height: 500px) { /* Этот медиа-запрос может быть слишком агрессивным, настройть по необходимости */
        .game-container {
            padding: 0.4rem;
            justify-content: flex-start; 
        }
        .game-header h2 {
            font-size: 1.1rem;
            margin-bottom: 0.1rem;
        }
        .balance, .win {
            font-size: 0.8rem;
            margin: 0.1rem 0;
        }
        .btn-spin {
            font-size: 0.9rem;
            padding: 0.4rem 0.8rem;
            margin: 0.2rem 0;
        }
        .slot-machine {
            padding: 0.4rem;
            margin: 0.2rem 0;
            max-width: 320px; /* Еще меньше для очень низких экранов */
        }
        .slot-cell {
             font-size: clamp(1.5rem, 7vw, 2.2rem);
        }
        .input-group .form-control, .input-group .btn, .input-group-text {
            font-size: 0.7rem;
            padding: 0.25rem 0.4rem;
        }
        .verify-form-section {
            margin-top: 0.3rem;
        }
    }
  </style>
</head>
<body>
  <div class="game-wrapper">
    <div class="game-container">
      <div class="game-header">
        <h2>Welcome, <%= CGI.escapeHTML(@player_name.to_s) %>!</h2>
        <p class="balance">Balance: <%= @balance.round(2) %></p>
      </div>

      <% if @message %>
        <div class="alert alert-info" role="alert">
          <%= CGI.escapeHTML(@message.to_s) %>
        </div>
      <% end %>

      <% if @require_deposit %>
        <div class="alert alert-warning" role="alert">
          Your balance is zero. Please deposit funds to play.
        </div>
      <% end %>

      <div class="form-section">
        <form action="/set_bet" method="post" class="input-group mb-2">
          <span class="input-group-text">Bet:</span>
          <input type="number" name="bet" value="<%= @bet %>" step="0.01" min="0.01" class="form-control" required>
          <button type="submit" class="btn btn-outline-light">Set Bet</button>
        </form>

        <form action="/deposit" method="post" class="input-group mb-3">
          <span class="input-group-text">Deposit:</span>
          <input type="number" name="amount" placeholder="Amount" step="0.01" min="0.01" class="form-control" required>
          <button type="submit" class="btn btn-outline-success">Deposit</button>
        </form>
      </div>

      <form action="/spin" method="post" class="d-grid gap-2 mb-3">
        <button type="submit" class="btn btn-spin btn-lg">Spin!</button>
      </form>
      
      <%# Display last spin result %>
      <% if @last_screen_rows %>
        <div class="slot-machine mb-3">
          <div class="slot-grid">
            <% @last_screen_rows.each_with_index do |row, r_idx| %>
              <% row.each_with_index do |symbol, c_idx| %>
                <% is_winning = (@last_winning_cells || []).any? { |cell| cell[:row] == r_idx && cell[:col] == c_idx } %>
                <div class="slot-cell <%= 'highlight' if is_winning %>">
                  <span class="slot-symbol symbol-<%= symbol.to_s.upcase %>">
                    <%=
                      case symbol.to_s.upcase
                      when "APPLE" then "🍎"
                      when "BANANA" then "🍌"
                      when "PLUM" then "🍇"
                      when "BAR" then "🍸"
                      when "STAR" then "⭐"
                      when "7" then "7️⃣"
                      when "WILD" then "🃏"
                      else CGI.escapeHTML(symbol.to_s)
                      end
                    %>
                  </span>
                </div>
              <% end %>
            <% end %>
          </div>
        </div>
        <%# Button to verify the last spin %>
        <% if @can_verify_last_spin %>
          <form action="/verify_last_spin" method="post" class="d-grid gap-2 mb-3">
            <button type="submit" class="btn btn-info btn-sm">Verify Last Spin (Nonce: <%= session[:last_spin_to_verify][:nonce] %>)</button>
          </form>
        <% end %>
      <% else %>
        <p class="text-center my-3">Spin to start the game!</p>
      <% end %>

      <%# Display verified spin result %>
      <% if @verified_screen_rows %>
        <hr>
        <h4 class="mt-3 text-center">Verified Spin Result</h4>
        <div class="provably-fair-info text-center small mt-2 mb-2">
          <p>Nonce: <%= CGI.escapeHTML(@verified_nonce.to_s) %></p>
          <p>Client Seed Hash: <br><code style="font-size: 0.8em; word-break: break-all;"><%= CGI.escapeHTML(@verified_client_seed_hash.to_s) %></code></p>
          <p>Server Seed (revealed): <br><code style="font-size: 0.8em; word-break: break-all;"><%= CGI.escapeHTML(@verified_server_seed.to_s) %></code></p>
          <p>Server Seed Hash: <br><code style="font-size: 0.8em; word-break: break-all;"><%= CGI.escapeHTML(@verified_server_seed_hash.to_s) %></code></p>
        </div>
        <div class="slot-machine mb-3">
          <div class="slot-grid">
            <% @verified_screen_rows.each_with_index do |row, r_idx| %>
              <% row.each_with_index do |symbol, c_idx| %>
                <% is_winning_verified = (@verified_winning_cells || []).any? { |cell| cell[:row] == r_idx && cell[:col] == c_idx } %>
                <div class="slot-cell <%= 'highlight' if is_winning_verified %>">
                  <span class="slot-symbol symbol-<%= symbol.to_s.upcase %>">
                    <%=
                      case symbol.to_s.upcase
                      when "APPLE" then "🍎"
                      when "BANANA" then "🍌"
                      when "PLUM" then "🍇"
                      when "BAR" then "🍸"
                      when "STAR" then "⭐"
                      when "7" then "7️⃣"
                      when "WILD" then "🃏"
                      else CGI.escapeHTML(symbol.to_s)
                      end
                    %>
                  </span>
                </div>
              <% end %>
            <% end %>
          </div>
        </div>
      <% end %>

    </div> <%# End game-container %>
  </div> <%# End game-wrapper %>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
